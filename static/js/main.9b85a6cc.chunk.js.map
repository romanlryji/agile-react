{"version":3,"sources":["components/InputTodo.js","components/TodoItem.js","components/TodoItems.js","components/TodoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["InputTodo","props","useState","title","inputText","setInputText","InputGroup","className","FormControl","value","onChange","e","console","log","target","placeholder","Button","variant","id","onClick","preventDefault","trim","addTodoFunc","alert","TodoItem","todo","completed","editingMode","setEditingMode","Checkbox","checked","handleCompletedToggleFunc","readOnly","style","fontStyle","color","opacity","textDecoration","onDoubleClick","onKeyDown","key","onBlur","setNewTitleFunc","deleteTodoFunc","TodoItems","ListGroup","todos","map","Item","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","getNow","Date","now","useEffect","stringify","setItem","newTodo","uuidv4","created","modified","sort","a","b","filter","prevState","newTitle","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAgDeA,EA1CG,SAAAC,GAChB,MAAkCC,mBAAS,CACzCC,MAAO,KADT,mBAAOC,EAAP,KAAkBC,EAAlB,KAyBA,OACE,eAACC,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACE,cAACC,EAAA,EAAD,CACEC,MAAOL,EAAUD,MACjBO,SAzBW,SAAAC,GACfC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBJ,EAAa,CACXF,MAAOQ,EAAEG,OAAOL,SAuBdM,YAAY,gBACZ,aAAW,gBACX,mBAAiB,iBAEnB,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,GAAG,gBAAgBC,QAvB1C,SAAAR,GACfA,EAAES,iBACEhB,EAAUD,MAAMkB,QAClBpB,EAAMqB,YAAYlB,EAAUD,OAC5BE,EAAa,CACXF,MAAO,MAGToB,MAAM,0BAGRX,QAAQC,IAAIT,EAAUD,MAAQ,WAY5B,qB,QCQSqB,EA5CE,SAAAvB,GACf,MAAiCA,EAAMwB,KAA/BC,EAAR,EAAQA,UAAWR,EAAnB,EAAmBA,GAAIf,EAAvB,EAAuBA,MACvB,EAAsCD,oBAAS,GAA/C,mBAAOyB,EAAP,KAAoBC,EAApB,KAmBA,OACE,eAACtB,EAAA,EAAD,WACE,cAACA,EAAA,EAAWuB,SAAZ,CAAqB,aAAW,oCAAoCC,QAASJ,EAAWhB,SAAU,kBAAMT,EAAM8B,0BAA0Bb,MACxI,cAACV,EAAA,EAAD,CACEwB,UAAWL,EACXM,MAAOP,EAZU,CACrBQ,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAQwB,KACpC5B,MAAON,EACPmC,cAxBgB,WACpBV,GAAe,IAwBXW,UArBmB,SAAA5B,GACT,UAAVA,EAAE6B,KAA6B,WAAV7B,EAAE6B,KACzBZ,GAAe,IAoBba,OAAQ,WAAOb,GAAe,IAC9BlB,SAAU,SAAAC,GAAC,OAAIV,EAAMyC,gBAAgBxB,EAAIP,EAAEG,OAAOL,UAEpD,cAACO,EAAA,EAAD,CACEC,QAAQ,oBACRC,GAAG,gBACHC,QAAS,WAAQlB,EAAM0C,eAAezB,IAHxC,wBCVS0B,EAxBG,SAAA3C,GAIhB,OAEE,cAAC4C,EAAA,EAAD,UACG5C,EAAM6C,MAAMC,KACX,SAAAtB,GAAI,OACF,cAACoB,EAAA,EAAUG,KAAX,UAA8B,cAAC,EAAD,CAE5BvB,KAAMA,EACNM,0BAA2B9B,EAAM8B,0BACjCY,eAAgB1C,EAAM0C,eACtBD,gBAAiBzC,EAAMyC,iBAJlBjB,EAAKP,KADSO,EAAKP,UCkFrB+B,EA1FO,WAYpB,MAA0B/C,mBAsD1B,WACE,IAAMgD,EAAOC,aAAaC,QAAQ,SAElC,OADoBC,KAAKC,MAAMJ,IACT,GAzDWK,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KAkDA,SAASC,IACP,OAAOC,KAAKC,MAcd,OALAC,qBAAU,WACR,IAAMV,EAAOG,KAAKQ,UAAUf,GAC5BK,aAAaW,QAAQ,QAASZ,KAC7B,CAACJ,IAGF,gCACE,cAAC,EAAD,CAAWxB,YAhDK,SAAAnB,GAClB,IAAM4D,EAAU,CACd7C,GAAI8C,cACJ7D,MAAOA,EACPuB,WAAW,EACXuC,QAASR,IACTS,SAAUT,KAEZD,EAAS,GAAD,mBAAKV,GAAL,CAAYiB,QAyClB,cAAC,EAAD,CACEjB,MAAOA,EAAMqB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,QAAUI,EAAEJ,WAC1CtB,eAvCc,SAAAzB,GAClBsC,EAAS,YACJV,EAAMwB,QAAO,SAAA7C,GACd,OAAOA,EAAKP,KAAOA,QAqCnBa,0BAnEwB,SAAAb,GAC5BsC,GAAS,SAAAe,GAAS,OAChBA,EAAUxB,KAAI,SAAAtB,GACZ,OAAIA,EAAKP,KAAOA,EACP,2BACFO,GADL,IAEEC,WAAYD,EAAKC,UACjBwC,SAAUT,MAGPhC,SA0DPiB,gBAjCc,SAACxB,EAAIsD,GACvBhB,EACEV,EAAMC,KAAI,SAAAtB,GAIR,OAHIA,EAAKP,KAAOA,IACdO,EAAKtB,MAAQqE,GAER/C,aCGAgD,MArCf,WACE,OAEE,cAACC,EAAA,EAAD,CAAWnE,UAAU,MAArB,SAQE,cAAC,EAAD,OC3BSoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b85a6cc.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst InputTodo = props => {\n  const [inputText, setInputText] = useState({\n    title: \"\"\n  })\n\n  const onChange = e => {\n    console.log(e.target.value)\n    setInputText({\n      title: e.target.value\n    })\n  }\n\n  const addClick = e => {\n    e.preventDefault()\n    if (inputText.title.trim()) {\n      props.addTodoFunc(inputText.title)\n      setInputText({\n        title: \"\"\n      })\n    } else {\n      alert(\"Enter something please\")\n    }\n    \n    console.log(inputText.title + ' added')\n  }\n\n  return (\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        value={inputText.title}\n        onChange={onChange}\n        placeholder=\"New Todo Item\"\n        aria-label=\"New Todo Item\"\n        aria-describedby=\"basic-addon2\"\n      />\n      <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={addClick}>\n        Add\n      </Button>\n    </InputGroup>\n  )\n}\n\nexport default InputTodo","import { useState } from \"react\"\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\nconst TodoItem = props => {\n  const { completed, id, title } = props.todo\n  const [editingMode, setEditingMode] = useState(false)\n\n  const enableEditing = () => {\n    setEditingMode(true)\n  }\n\n  const handleUpdateDone = e => {\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\n      setEditingMode(false)\n    }\n  }\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  }\n\n  return (\n    <InputGroup>\n      <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" checked={completed} onChange={() => props.handleCompletedToggleFunc(id)} />\n      <FormControl\n        readOnly={!editingMode}\n        style={completed ? completedStyle : null}\n        value={title}\n        onDoubleClick={enableEditing}\n        onKeyDown={handleUpdateDone}\n        onBlur={() => {setEditingMode(false)}}\n        onChange={e => props.setNewTitleFunc(id, e.target.value)}\n      />\n      <Button\n        variant=\"outline-secondary\"\n        id=\"button-addon2\"\n        onClick={() => { props.deleteTodoFunc(id) }}\n      >\n        Delete\n      </Button>\n    </InputGroup>\n  )\n}\n\nexport default TodoItem","import ListGroup from 'react-bootstrap/ListGroup'\n\nimport TodoItem from \"./TodoItem\"\n\nconst TodoItems = props => {\n\n\n\n  return (\n\n    <ListGroup>\n      {props.todos.map(\n        todo => (\n          <ListGroup.Item key={todo.id}><TodoItem\n            key={todo.id}\n            todo={todo}\n            handleCompletedToggleFunc={props.handleCompletedToggleFunc}\n            deleteTodoFunc={props.deleteTodoFunc}\n            setNewTitleFunc={props.setNewTitleFunc}\n          /></ListGroup.Item>\n        ))\n      }\n      {/* <ListGroup.Item><TodoItem todo={todo1} /></ListGroup.Item>\n      <ListGroup.Item><TodoItem todo={todo2} /></ListGroup.Item> */}\n    </ListGroup>\n  )\n}\n\nexport default TodoItems","import React, { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport InputTodo from \"./InputTodo\"\nimport TodoItems from \"./TodoItems\"\n\nconst TodoContainer = () => {\n  // let todo1 = {\n  //   id: uuidv4(),\n  //   title: 'Item1'\n  // }\n\n  // let todo2 = {\n  //   id: uuidv4(),\n  //   title: 'Item2'\n  // }\n\n  // const [todos, setTodos] = useState([todo1, todo2])\n  const [todos, setTodos] = useState(getInitialTodos())\n\n  // let todos = [todo1, todo2]\n\n  const handleCompletedToggle = id => {\n    setTodos(prevState =>\n      prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n            modified: getNow()\n          }\n        }\n        return todo\n      })//.sort((a, b) => a.modified < b.modified)\n    )\n  }\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n      created: getNow(),\n      modified: getNow()\n    }\n    setTodos([...todos, newTodo])\n    // alert((new Date(getNow())).getTimezoneOffset())\n  }\n\n  const delTodoItem = id => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      })\n    ])\n  }\n\n  const setNewTitle = (id, newTitle) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = newTitle\n        }\n        return todo\n      })\n    )\n  }\n\n  function getNow() {\n    return Date.now()\n  }\n\n  function getInitialTodos() {\n    const temp = localStorage.getItem(\"todos\")\n    const loadedTodos = JSON.parse(temp)\n    return loadedTodos || []\n  }\n\n  useEffect(() => {\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  return (\n    <div>\n      <InputTodo addTodoFunc={addTodoItem} />\n      <TodoItems\n        todos={todos.sort((a, b) => a.created < b.created)}\n        deleteTodoFunc={delTodoItem}\n        handleCompletedToggleFunc={handleCompletedToggle}\n        setNewTitleFunc={setNewTitle}\n      />\n    </div>\n  )\n}\n\nexport default TodoContainer","// import logo from './logo.svg';\nimport React, { useState } from 'react';\n\n// import Navbar from './components/Navbar';\n\n// import Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\n// import Button from 'react-bootstrap/Button';\n\nimport './App.css';\nimport TodoContainer from './components/TodoContainer';\n\n// const ExampleToast = ({ children }) => {\n//   const [show, toggleShow] = useState(true);\n\n//   return (\n//     <>\n//       {!show && <Button onClick={() => toggleShow(true)}>Show Toast</Button>}\n//       <Toast show={show} onClose={() => toggleShow(false)}>\n//         <Toast.Header>\n//           <strong className=\"mr-auto\">React-Bootstrap</strong>\n//         </Toast.Header>\n//         <Toast.Body>{children}</Toast.Body>\n//       </Toast>\n//     </>\n//   );\n// };\n\nfunction App() {\n  return (\n\n    <Container className=\"p-3\">\n      {/* <h1 className=\"header\">Welcome To React-Bootstrap</h1>\n      <ExampleToast>\n        We now have Toasts\n        <span role=\"img\" aria-label=\"tada\">\n          🎉\n        </span>\n      </ExampleToast> */}\n      <TodoContainer />\n    </Container>\n\n\n    // <>\n    //   <Navbar />\n    // </>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}